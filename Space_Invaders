import math
from os import path

import pygame

# from all_classes import *

WIDTH = 800
HEIGHT = 600
FPS = 60

# ===============initialize pygame and create window=========
pygame.init()
pygame.mixer.init()
pygame.display.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Kilroy")
clock = pygame.time.Clock()

# ===========Add all Colors=========
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
GREEN = (0, 255, 0)
GRAY = (128, 128, 128)

# =========================Sprites Images=====================
img_dir = path.join(path.dirname(__file__), 'H:\\Images')

aim_img = pygame.image.load(path.join(img_dir, "aim.jpg")).convert()
aim_img = pygame.transform.scale(aim_img, (40, 40))

space_back = pygame.image.load(path.join(img_dir, "full-background.png")).convert()
space_back = pygame.transform.scale(space_back, [1200, HEIGHT])

bullet_img = pygame.image.load(path.join(img_dir, "bullet.png")).convert()
bullet_img = pygame.transform.scale(bullet_img, [30, 30])
bullet_img = pygame.transform.rotate(bullet_img, 270)


# ======================Define Sprites===================
class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([20, 20])
        self.image.fill(BLACK)
        self.rect = self.image.get_rect()
        self.rect.x = 100
        self.rect.y = 100
        self.speed_x = 0
        self.speed_y = -200

    def update(self):
        keystate = pygame.key.get_pressed()
        if keystate[pygame.K_d]:
            self.speed_x = 5
        elif keystate[pygame.K_a]:
            self.speed_x = -5
        else:
            self.speed_x = 0
        self.rect.x += self.speed_x
        if self.rect.bottom >= 540:
            self.rect.bottom = 540
        if self.rect.left <= 0:
            self.rect.left = 0
            self.speed_x = 0
        if self.rect.right >= WIDTH:
            self.rect.right = WIDTH
            self.speed_x = 0


class Bullet(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([20, 20])
        self.rect = self.image.get_rect()
        self.image = bullet_img
        self.image.set_colorkey(WHITE)
        self.speed_x = 0
        self.speed_y = 0
        self.rect.center = kilroy.rect.center

    def update(self):
        if distance:
            self.rect.x += dx
            self.rect.y += dy
        if self.rect.x > WIDTH or self.rect.y > HEIGHT or self.rect.y < 0 or self.rect.x < 0:
            self.kill()


class Platform(pygame.sprite.Sprite):
    def __init__(self, plat_x, plat_y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([50, 50])
        self.rect = self.image.get_rect()
        self.image.fill(BLACK)
        self.rect.x = plat_x
        self.rect.y = plat_y

    def update(self):
        self.rect.x -= kilroy.speed_x


# ===============Add all Sprites=========
all_sprites_list = pygame.sprite.Group()

kilroy = Player()
all_sprites_list.add(kilroy)
kilroy_group = pygame.sprite.Group()

bullet = Bullet()
bullet_group = pygame.sprite.Group()

plat_groupp = pygame.sprite.Group()
platfromer = Platform(100, 100)
plat_x_2 = 50
for i in range(36):
    platfromer = Platform(plat_x_2, 450)
    plat_x_2 += 50
    plat_groupp.add(platfromer)
    all_sprites_list.add(platfromer)

# ======================Define Variables=================

stage_pos_x = 0

gravity = -6
x, y = bullet.rect.x, bullet.rect.y
pmx, pmy = x, y

dx, dy = 0, 0
distance = 0
speed = 14
last_update = pygame.time.get_ticks()
# =========================game loop=====================
running = True
while running:
    collide = pygame.sprite.spritecollide(kilroy, plat_groupp, None)
    if collide:
        kilroy.rect.bottom = platfromer.rect.top
    now = pygame.time.get_ticks()
    screen.fill(BLACK)
    clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_w and collide:
                kilroy.rect.y += kilroy.speed_y
            if event.key == pygame.K_SPACE and now - last_update > 900:
                last_update = pygame.time.get_ticks()
                all_sprites_list.add(bullet)
                mx, my = pygame.mouse.get_pos()
                bullet.rect.center = kilroy.rect.center
                radians = math.atan2(my - bullet.rect.y, mx - bullet.rect.x)
                distance = math.hypot(mx - pmx, my - pmy) / speed
                distance = int(distance)
                dx = math.cos(radians) * speed
                dy = math.sin(radians) * speed

    if stage_pos_x <= -400:
        stage_pos_x = -400
    elif kilroy.rect.x >= WIDTH / 2 - 100:
        stage_pos_x -= kilroy.speed_x
        # plat_x_2 -= kilroy.speed_x
        kilroy.rect.x = WIDTH / 2 - 100
    kilroy.rect.y -= gravity
    screen.blit(space_back, [stage_pos_x, 0])
    all_sprites_list.update()
    bullet_group.update()
    all_sprites_list.draw(screen)
    pygame.display.flip()
pygame.quit()
