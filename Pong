# --- Event Processing
import pygame
import sys

b_scr_num_2 = 0
r_scr_num_2 = 0
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

size = [1000, 500]
# Move the rectangle starting point
rect_x = 350
rect_y = 250

# Speed and direction of rectangle
rect_change_x = 2
rect_change_y = 2
done = False

r_ai = 40
r_rect_x = 660
r_rect_y = 250

b_rect_x = 20
b_rect_y = 250

clock = pygame.time.Clock()
pygame.init()
pygame.mixer.init()
pygame.display.set_caption('Pong')
B_font = pygame.font.SysFont(None, 38)
B_text = B_font.render('Blue Score!', True, BLUE, BLACK)
R_font = pygame.font.SysFont(None, 38)
R_text = R_font.render('Red Score!', True, RED, BLACK)
screen = pygame.display.set_mode(size)
while not done:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True
            # --- Logic
    rect_x += rect_change_x
    rect_y += rect_change_y
    r_rect_y = rect_y - r_ai
    # b_rect_y = rect_y - 40
    if rect_y > 474 or rect_y < 15:
        rect_change_y = rect_change_y * -1
    if b_rect_y <= 0 and pygame.KEYDOWN:
        b_rect_y = 1
    if b_rect_y > 418 and pygame.KEYDOWN:
        b_rect_y = 418
    if rect_x > 679:
        rect_change_x = rect_change_x * -1
        b_scr_num_2 = b_scr_num_2 + 1
    if rect_x < 20:
        rect_change_x = rect_change_x * -1
        r_scr_num_2 = r_scr_num_2 + 1
        # b_scr_num_2 = b_scr_num_2 + 1
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_UP:
            b_rect_y = b_rect_y + - 3
        if event.key == pygame.K_DOWN:
            b_rect_y = b_rect_y + 3
    # --- Drawing
    # Set the screen background
    screen.fill(BLACK)
    # Draw the rectangle
    Ball = pygame.draw.circle(screen, YELLOW, [rect_x, rect_y], 20)
    R_Paddle = pygame.draw.rect(screen, RED, [r_rect_x, r_rect_y, 20, 80])
    B_Paddle = pygame.draw.rect(screen, BLUE, [b_rect_x, b_rect_y, 20, 80])
    # --- Wrap-up
    if Ball.colliderect(R_Paddle):
        rect_change_x = rect_change_x * -1
        r_ai = r_ai - 5
    if Ball.colliderect(B_Paddle):
        rect_change_x = rect_change_x * -1
    # Limit to 60 frames per second
    textrect = B_text.get_rect()
    textrect.centerx = 850
    textrect.centery = 50
    r_textrect = R_text.get_rect()
    r_textrect.centerx = 850
    r_textrect.centery = 250

    screen.blit(B_text, textrect)
    screen.blit(R_text, r_textrect)
    clock.tick(60)
    # Go ahead and update the screen with what we've drawn.
    pygame.display.flip()

pygame.quit()
