# --- Event Processing
import pygame
import sys
import time
b_scr_num_2 = 0
r_scr_num_2 = 0
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)


def draw_score():
    B_win_font = pygame.font.SysFont(None, 78)
    B_win_txt = B_win_font.render("Blue Wins", 1, BLUE)
    b_win_textrect = B_win_txt.get_rect()
    b_win_textrect.centerx = 500
    b_win_textrect.centery = 250
    B_font = pygame.font.SysFont(None, 38)
    B_text = B_font.render('Blue Score!', True, BLUE, BLACK)
    B_scr = B_font.render(str(b_scr_num_2), 1, BLUE)
    R_font = pygame.font.SysFont(None, 38)
    R_text = R_font.render('Red Score!', True, RED, BLACK)
    R_scr = R_font.render(str(r_scr_num_2), 1, RED)
    R_win_font = pygame.font.SysFont(None, 78)
    R_win_txt = R_win_font.render("Red Wins", 1, RED)
    R_win_textrect = R_win_txt.get_rect()
    R_win_textrect.centerx = 500
    R_win_textrect.centery = 250
    b_textrect = B_text.get_rect()
    b_textrect.centerx = 850
    b_textrect.centery = 50
    b_textrect_num = B_scr.get_rect()
    b_textrect_num.centerx = 850
    b_textrect_num.centery = 100

    r_textrect = R_text.get_rect()
    r_textrect.centerx = 850
    r_textrect.centery = 250
    r_textrect_num = R_scr.get_rect()
    r_textrect_num.centerx = 850
    r_textrect_num.centery = 300

    screen.blit(B_text, b_textrect)
    screen.blit(B_scr, b_textrect_num)
    screen.blit(R_text, r_textrect)
    screen.blit(R_scr, r_textrect_num)
    if b_scr_num_2 == 3 or b_scr_num_2 > 3:
        screen.blit(B_win_txt, b_win_textrect)
        time.sleep(10000)
    if r_scr_num_2 == 3 or r_scr_num_2 > 3:
        screen.blit(R_win_txt, R_win_textrect)
        time.sleep(10000)
    clock.tick(60)


backround = pygame.image.load('H:\pixel8.jpg')
backround = pygame.transform.scale(backround, (1000, 500))

size = [1000, 500]
# Move the rectangle starting point
rect_x = 350
rect_y = 250

# Speed and direction of rectangle
rect_change_x = 3
rect_change_y = 3
done = False

r_rect_x = 660
r_rect_y = 250

b_rect_x = 20
b_rect_y = 250

r_ai = 40

clock = pygame.time.Clock()
pygame.init()
pygame.mixer.init()

pygame.display.set_caption('Pong')
# backround = pygame.image.load("pong_3.png")
screen = pygame.display.set_mode(size)
while not done:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True
            # --- Logic

    rect_x += rect_change_x
    rect_y += rect_change_y
    r_rect_y = rect_y - r_ai
    if rect_y > 474 or rect_y < 15:
        rect_change_y = rect_change_y * -1
    if b_rect_y <= 0 and pygame.KEYDOWN:
        b_rect_y = 1
    if b_rect_y > 418 and pygame.KEYDOWN:
        b_rect_y = 418
    if r_rect_y <= 0:
        r_rect_y = 1
    if r_rect_y > 417:
        r_rect_y = 418
    if rect_x > 679:
        rect_change_x = rect_change_x * -1
        b_scr_num_2 = b_scr_num_2 + 1
        rect_x = 350
        rect_y = 250
        r_rect_y = rect_y
        r_ai = 40
    if rect_x < 20:
        rect_change_x = rect_change_x * -1
        r_scr_num_2 = r_scr_num_2 + 1
        rect_x = 350
        rect_y = 250
        r_rect_y = rect_y
        r_ai = 40
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_UP:
            b_rect_y = b_rect_y + - 3
        if event.key == pygame.K_DOWN:
            b_rect_y = b_rect_y + 3
        if event.key == pygame.K_LEFT:
            b_rect_y = b_rect_y + - 3
        if event.key == pygame.K_RIGHT:
            b_rect_y = b_rect_y + 3
    # --- Drawing
    # Set the screen background
    screen.fill(BLACK)
    # screen.blit(backround, [0, 0])
    # Draw the rectangle
    Ball = pygame.draw.circle(screen, YELLOW, [rect_x, rect_y], 20)
    R_Paddle = pygame.draw.rect(screen, RED, [r_rect_x, r_rect_y, 20, 80])
    B_Paddle = pygame.draw.rect(screen, BLUE, [b_rect_x, b_rect_y, 20, 80])
    # --- Wrap-up
    if Ball.colliderect(R_Paddle):
        rect_change_x = rect_change_x * -1
    if Ball.colliderect(B_Paddle):
        rect_change_x = rect_change_x * -1
        r_ai = r_ai - 15
    draw_score()
    # Go ahead and update the screen with what we've drawn.
    pygame.display.flip()

pygame.quit()
